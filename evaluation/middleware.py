from django.shortcuts import redirect
from django.conf import settings
from django.http import HttpResponse

class EvaMiddleware:  
    """
    Custom Middleware for the Evaluation app.

    This middleware class handles specific requests and sessions for the Evaluation app.

    Args:
        get_response (function): The Django view function that this middleware wraps.

    Attributes:
        get_response (function): The Django view function that this middleware wraps.

    Methods:
        __call__(self, request): The main method of the middleware, called for each request.

    Example:
        To use this middleware, add it to the MIDDLEWARE list in your Django project's settings.py file as follows:

        MIDDLEWARE = [
            ...
            'evaluation.middleware.EvaMiddleware',
            ...
        ]

    Middleware is used to process requests and responses globally before they reach the view or after they leave the
    view. This custom middleware checks if certain conditions are met before allowing a request to proceed to the view.

    In this case, it checks if the 'evaluator' key is present in the request session and whether a specific setting
    ('CNN') is enabled in the project's settings. Depending on these conditions, it may return a "BAD REQUEST" response
    or proceed with the request.

    If you have any questions or need further clarification, please refer to the comments in the code or feel free
    to ask for assistance.
    """
    
    def __init__(self, get_response):     
        """
        Initialize the middleware with the provided get_response function.

        Args:
            get_response (function): The Django view function that this middleware wraps.
        """  
        self.get_response = get_response
        
    def __call__(self, request):      
        """
        Handle each request.

        This method is called for each incoming request. It checks conditions and manages sessions before allowing
        the request to proceed to the view.

        Args:
            request (HttpRequest): The incoming request object.

        Returns:
            HttpResponse: The response generated by this middleware.
        """    
        res = HttpResponse('<h1 style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">BAD REQUEST 4011111111 </h1>')   
        try:      
            # Check if the 'CNN' setting is enabled 
            if settings.CNN == True:
                # Check if the request path is not the root '/'
                if request.path != '/':                 
                   return res 
            else:
                pass    
        except:
            # Handle any exceptions by returning the 'BAD REQUEST' response
            return res            
                
        # Initialize the 'evaluator' session variable if not present        
        if 'evaluator' not in request.session:
            request.session['evaluator'] = ''   
            
        # Proceed with the request      
        response = self.get_response(request)       
        return response
    
    
        
        

        